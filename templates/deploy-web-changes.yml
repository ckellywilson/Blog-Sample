parameters:
  solution: ''
  buildPlatform: ''
  buildConfiguration: ''
  artifactsDirectory: ''
  azureSubscription: ''
  webAppName: ''

stages:
- stage: DeployWebChanges
  displayName: 'Deploy Web Changes'
  pool:
      vmImage: 'ubuntu-latest'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - task: UseDotNet@2
      displayName: 'Install 6.x version of .NET'
      inputs:
        version: '6.x'

    - task: DotNetCoreCLI@2
      displayName: 'Install Entity Framework'
      inputs:
        command: custom
        custom: tool
        arguments: 'install --global dotnet-ef'

    - task: NuGetToolInstaller@1
      displayName: 'Install NuGet tools'

    - task: NuGetCommand@2
      displayName: 'Restore solution ${{ parameters.solution }}'
      inputs:
        restoreSolution: ${{ parameters.solution }}

    - task: DotNetCoreCLI@2
      displayName: Build Solution
      inputs:
        command: build
        projects: '${{ parameters.solution }}'
        arguments: '--configuration ${{ parameters.buildConfiguration }}'
  
    - task: DotNetCoreCLI@2
      displayName: 'Execute Unit Tests'
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration ${{ parameters.buildConfiguration }}'

  - job: PublishArtifacts
    displayName: 'Publish Artifacts'
    dependsOn: Build
    steps:
    - task: UseDotNet@2
      displayName: 'Install 6.x version of .NET'
      inputs:
        version: '6.x'
        
    - task: DotNetCoreCLI@2
      displayName: 'Publish local artifacts'
      inputs:
        command: publish
        arguments: '--configuration ${{ parameters.buildConfiguration }} --output ${{ parameters.artifactsDirectory }}'
        zipAfterPublish: True

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts'
      inputs:
        PathtoPublish: '${{ parameters.artifactsDirectory }}'
        ArtifactName: 'drop'
        publishLocation: 'Container'

  - job: DeployWebApp
    displayName: 'Deploy Web App'
    dependsOn: PublishArtifacts
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        downloadPath: '$(System.ArtifactsDirectory)'
        artifactName: 'drop'
    - task: AzureWebApp@1
      inputs:
        azureSubscription: ${{ parameters.azureSubscription }}
        appType: 'webAppLinux'
        appName: ${{ parameters.webAppName }}
        package: '$(System.ArtifactsDirectory)/**/*.zip'
        runtimeStack: 'DOTNETCORE|5.0'
        startUpCommand: 'dotnet Blog.Web.dll'
    
