# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'
  dotnetVersion: '5.x'

stages:
- stage: Build
  displayName: 'Build Web Resources'
  jobs:
  - job: BuildWebAPI
    displayName: 'Build Web API'
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: UseDotNet@2
      displayName: 'Install $(dotnetVersion)'
      inputs:
        packageType: 'sdk'
        version: '$(dotnetVersion)'
    - task: DotNetCoreCLI@2
      displayName: 'Restore all projects'
      inputs:
        command: 'restore'
        projects: '**/*.sln'
    - task: DotNetCoreCLI@2
      displayName: 'Build Web API'
      inputs:
        command: 'build'
        projects: '$(System.DefaultWorkingDirectory)/**/Blog.Web.csproj'
        arguments: '--no-restore --configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: 'publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(System.DefaultWorkingDirectory)/**/Blog.Web.csproj'
        arguments: '--no-restore --no-build --configuration $(buildConfiguration)'
        modifyOutputPath: false
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# - stage: BuildWebAPI
#   displayName: 'Build Web API'
  
# - stage: Test
#   displayName: 'Run Tests'

  # jobs:

  # - job: BuildWebApi
  #   displayName: 'Build Web API Code'
  #   steps:
  #   - task: @UseDotNet@2
  #     displayName: '$(dotnetVersion)'
  #     inputs:
  #       version: '5.x'
  #   - task: DotNetCoreCLI@2
  #     displayName: 'Restore project dependencies'
  #     inputs:
  #       command: 'restore'
  #       projects: '**/*.csproj'
  #   - task: DotNetCoreCLI@2
  #     displayName: 'Build Web API Project'
  #     inputs:
  #       command: 'build'
  #       arguments: '--no-response --configuration $(buildConfiguration)'
  #       projects: '$(System.DefaultWorkingDirectory)/**/Blog.Web.csproj'
  #   - task: DotNetCoreCLI@2
  #     displayName: 'Publish Project - $(buildConfiguration)'
  #     inputs:
  #       command: 'publish'
  #       projects: 'webProject'
  #       publishWebProjects: false
  #       arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
  #       zipAfterPublish: true
  #   - task: PublishBuildArtifacts@1
  #     displayName: 'Publish artifact: drop'
  #     condition: succeeded()

