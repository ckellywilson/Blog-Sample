# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'
  dotnetVersion: '5.0.200'
  containerHost: 'blog-pg-115.southcentralus.azurecontainer.io'

stages:
- stage: Build
  displayName: 'Build Web & DB'
  pool:
    vmImage: ubuntu-latest
    
  jobs:
  - job: DeployDB
    displayName: 'Deploy DB Changes'
    steps:
    - task: UseDotNet@2
      displayName: 'Install $(dotnetVersion)'
      inputs:
        packageType: 'sdk'
        version: '$(dotnetVersion)'
    - task: DotNetCoreCLI@2
      displayName: 'Install Entity Framework'
      inputs:
         command: custom
         custom: tool
         arguments: 'install --global dotnet-ef'
    - task: Bash@3
      displayName: 'Update database from ef core project'
      inputs:
        targetType: 'inline'
        script: |
          echo Run dotnet ef core
          dotnet ef database update --project '$(System.DefaultWorkingDirectory)/**/Blog.PostgreSQL.EF/Blog.PostgreSQL.EF.csproj'
          
          echo "SET PGPASSWORD environment variable"
          export PGPASSWORD='postgres'

          echo Populate database with default values
          psql -h '$(containerHost)' -p 5432 -d blog -U postgres -f '$(System.DefaultWorkingDirectory)/**/Blog.PostgreSQL/post-deploymentscripts/blog_entry_insert.sql'

  - job: BuildWebAPI
    displayName: 'Build Web API'
    steps:
    - task: UseDotNet@2
      displayName: 'Install $(dotnetVersion)'
      inputs:
        packageType: 'sdk'
        version: '$(dotnetVersion)'
    - task: DotNetCoreCLI@2
      displayName: 'Restore all projects'
      inputs:
        command: 'restore'
        projects: '**/*.sln'
    - task: DotNetCoreCLI@2
      displayName: 'Build Web API'
      inputs:
        command: 'build'
        projects: '$(System.DefaultWorkingDirectory)/**/Blog.Web.csproj'
        arguments: '--no-restore --configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: 'publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(System.DefaultWorkingDirectory)/**/Blog.Web.csproj'
        arguments: '--no-restore --no-build --configuration $(buildConfiguration) --output $(Build.ArtifactsStagingDirectory)/$(buildConfiguration)'
        modifyOutputPath: false
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactsStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

